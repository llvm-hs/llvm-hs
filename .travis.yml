# This file has been generated by `make_travis_yml_2.hs`
# see https://github.com/hvr/multi-ghc-travis for more information
language: c
sudo: false

cache:
  directories:
    - $HOME/.cabal/packages
    - $HOME/.cabal/store
    - $HOME/llvm-build
    - $HOME/llvm-src

before_cache:
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/build-reports.log
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/00-index.tar

env:
  global:
    - GCC=gcc-5
    - GXX=g++-5
    - LLVM_VER=3.9.1

matrix:
  include:
    - env: CABALVER=1.24 GHCVER=7.8.4
      compiler: ": #GHC 7.8.4"
      addons: {apt: {packages: [cabal-install-1.24,ghc-7.8.4,gcc-5,g++-5], sources: [hvr-ghc,llvm-toolchain-precise,ubuntu-toolchain-r-test]}}
    - env: CABALVER=1.24 GHCVER=7.10.3
      compiler: ": #GHC 7.10.3"
      addons: {apt: {packages: [cabal-install-1.24,ghc-7.10.3,gcc-5,g++-5], sources: [hvr-ghc,llvm-toolchain-precise,ubuntu-toolchain-r-test]}}
    - env: CABALVER=1.24 GHCVER=8.0.2
      compiler: ": #GHC 8.0.2"
      addons: {apt: {packages: [cabal-install-1.24,ghc-8.0.2,gcc-5,g++-5], sources: [hvr-ghc,llvm-toolchain-precise,ubuntu-toolchain-r-test]}}

before_install:
 - export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$PATH
 - mkdir -p $HOME/bin
 - export PATH=$HOME/bin:$PATH
 - export CC=/usr/bin/$GCC
 - export CXX=/usr/bin/$GXX
 - export LD_LIBRARY_PATH=$HOME/llvm-build/lib:$LD_LIBRARY_PATH

install:
 - curl https://cmake.org/files/v3.6/cmake-3.6.1-Linux-x86_64.tar.gz | tar -xzf - -C $HOME
 - export PATH=$HOME/cmake-3.6.1-Linux-x86_64/bin:$PATH
#  - curl http://releases.llvm.org/${LLVM_VER}/llvm-${LLVM_VER}.src.tar.xz | tar -xJf - -C $HOME
# # mv cannot replace existing files so we need to use cp & rm
#  - rsync -ac $HOME/llvm-${LLVM_VER}.src/ $HOME/llvm-src
# Temporarily use a snapshot until there is a release
 - curl -L https://github.com/llvm-mirror/llvm/archive/9f6ca5d7e66edccaacd196fdca06a4e788d5e5b7.zip -o llvm.zip
 - unzip -q llvm.zip -d $HOME
 - rsync -ac $HOME/llvm-9f6ca5d7e66edccaacd196fdca06a4e788d5e5b7/ $HOME/llvm-src
 - cd $HOME/llvm-src
 - mkdir -p build && cd build
 - cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$HOME/llvm-build -DLLVM_PARALLEL_LINK_JOBS=1 -DLLVM_TARGETS_TO_BUILD=X86 -DLLVM_BUILD_LLVM_DYLIB=True -DLLVM_LINK_LLVM_DYLIB=True ..
 - make install -j3
 - cd $TRAVIS_BUILD_DIR
 - ln -s $HOME/llvm-build/bin/llvm-config $HOME/bin/llvm-config
 - llvm-config --version
 - $GCC --version
 - $GXX --version
 - cabal --version
 - BENCH=${BENCH---enable-benchmarks}
 - TEST=${TEST---enable-tests}
 - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
 - if [ -f $HOME/.cabal/packages/hackage.haskell.org/00-index.tar.gz ];
   then
     zcat $HOME/.cabal/packages/hackage.haskell.org/00-index.tar.gz >
          $HOME/.cabal/packages/hackage.haskell.org/00-index.tar;
   fi
 - travis_retry cabal update -v
 - sed -i 's/^jobs:/-- jobs:/' ${HOME}/.cabal/config
 - cabal new-build ${TEST} ${BENCH} --dep

# Here starts the actual work to be performed for the package under test;
# any command which exits with a non-zero exit code causes the build to fail.
script:
 - if [ -f configure.ac ]; then autoreconf -i; fi
 # this builds all libraries and executables (including tests/benchmarks)
 - cabal new-build llvm-hs-pure llvm-hs --with-gcc $GCC --ghc-options "-pgmc=${GCC}" ${TEST} ${BENCH} # -v2 provides useful information for debugging

 # there's no 'cabal new-test' yet, so let's emulate for now
 - TESTS=("llvm-hs-pure-4.0.0.0/build/test/test" "llvm-hs-4.0.0.0/build/test/test");
   RC=true; for T in ${TESTS[@]}; do echo "== $T ==";
   if dist-newstyle/build/$T; then echo "= $T OK =";
   else echo "= $T FAILED ="; RC=false; fi; done; $RC

# EOF
